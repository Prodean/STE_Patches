diff --git a/src/com/android/phone/InCallScreen.java b/src/com/android/phone/InCallScreen.java
index d6ab777..06b44ce 100644
--- a/src/com/android/phone/InCallScreen.java
+++ b/src/com/android/phone/InCallScreen.java
@@ -1962,6 +1962,12 @@ public class InCallScreen extends Activity
         // Make sure we update the poke lock and wake lock when certain
         // phone state changes occur.
         mApp.updateWakeState();
+        
+        // Fix for low in-call volume bug.
+        // Reset the audio volume stream when phone state is OFFHOOK.
+        if (state == PhoneConstants.State.OFFHOOK) {
+            PhoneUtils.resetAudioStreamVolume();
+        }
     }
 
     /**
@@ -3157,6 +3163,10 @@ public class InCallScreen extends Activity
             disconnectBluetoothAudio();
         }
         PhoneUtils.turnOnSpeaker(this, newSpeakerState, true);
+        
+        // Fix for low in-call volume bug.
+        // Reset the audio volume stream when switching between speaker and earpiece.
+        PhoneUtils.resetAudioStreamVolume();
 
         // And update the InCallTouchUi widget (since the "audio mode"
         // button might need to change its appearance based on the new
@@ -3210,6 +3220,10 @@ public class InCallScreen extends Activity
             Log.w(LOG_TAG, "toggleBluetooth(): bluetooth is unavailable");
         }
 
+        // Fix for low in-call volume bug.
+        // Reset the audio volume stream when switching between normal call audio and bluetooth.
+        PhoneUtils.resetAudioStreamVolume();
+
         // And update the InCallTouchUi widget (since the "audio mode"
         // button might need to change its appearance based on the new
         // audio state.)
@@ -3274,6 +3288,10 @@ public class InCallScreen extends Activity
                 break;
         }
 
+        // Fix for low in-call volume bug.
+        // Reset the audio stream volume after switch between in-call audio.
+        PhoneUtils.resetAudioStreamVolume();
+
         // And finally, update the InCallTouchUi widget (since the "audio
         // mode" button might need to change its appearance based on the
         // new audio state.)
diff --git a/src/com/android/phone/PhoneUtils.java b/src/com/android/phone/PhoneUtils.java
index abc5206..6f1667b 100644
--- a/src/com/android/phone/PhoneUtils.java
+++ b/src/com/android/phone/PhoneUtils.java
@@ -2092,6 +2092,37 @@ public class PhoneUtils {
             audioManager.setParameters(aPValues[0] + "=" + aPValues[2]);
         }
     }
+    
+    /**
+     * Reset the audio stream volume to fix the low in-call volume bug.
+     *
+     * Due to a bug in the OMX system, the audio stream volume is set to 0 after it was set to it's default volume.
+     * Calling PhoneUtils.resetAudioStreamVolume() triggers the system to reset the volume.
+     *
+     * This should be called on every place where is switched between audio modes.
+     *
+     * REMARK: I think it only appears on the voice call stream, but to be sure I also do it on the bluetooth stream.
+     */
+    static void resetAudioStreamVolume() {
+        PhoneGlobals app = PhoneGlobals.getInstance();
+        AudioManager audioManager = (AudioManager) app.getSystemService(Context.AUDIO_SERVICE);
+        // determine actual streamType
+        int streamType = AudioManager.STREAM_VOICE_CALL;
+        if (app.isBluetoothHeadsetAudioOn()) {
+            streamType = AudioManager.STREAM_BLUETOOTH_SCO;
+        }
+        // determine volume and 1 level lower volume (lowest level can be 0)
+        int volume = audioManager.getStreamVolume(streamType);
+        int lowerVolume = volume - 1;
+        if (lowerVolume < 0) {
+            lowerVolume = 0;
+        }
+        log("resetAudioStreamVolume (streamType=" + streamType + ", streamVolume=" + volume + ")...");
+        // It's important to change it to another volume before restoring the original volume,
+        // otherwise the volume change will NOT be triggered!!
+        audioManager.setStreamVolume(streamType, lowerVolume, 0);
+        audioManager.setStreamVolume(streamType, volume, 0);
+    }
 
     static void writePhoneAppStatus(Context context, boolean flag) {
         String statusFile = context.getResources().getString(R.string.phone_app_status_file);
	 